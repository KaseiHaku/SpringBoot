/** TODO 将所有插件定义到 root project，
 * apply false: 表示将插件添加到所有项目中，除了 root project 
 * */
plugins {
    id 'java' 
    id 'idea'
    // 作用： 引入 gradle 构建 spring boot 项目所需要的 task，且引入的 task 会根据 gradle 中引入的插件动态变化
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    // 作用： 让 srping boot 来管理各个依赖的版本，而不是手工指定，
    // 好处： spring boot 管理的各个版本的依赖，都是经过测试的
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
}


allprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    

    sourceCompatibility = JavaVersion.VERSION_11        // 项目中代码使用的 JDK 版本
    targetCompatibility = JavaVersion.VERSION_11         // 编译后的 .class 文件的 JDK 版本
    version = '0.0.1'
    

    configurations {

        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'  // 排除掉 spring 默认的日志框架(logback)
        testCompile.exclude group: 'org.junit.vintage'  // 排除掉 Junit5 兼容 Junit4 的 jar 包
    }


    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
        jcenter()

    }


    dependencies {

        /** todo Gradle 支持的依赖方式
         * compileOnly — for dependencies that are necessary to compile your production code but shouldn’t be part of the runtime classpath
         * implementation (supersedes compile) — used for compilation and runtime
         * runtimeOnly (supersedes runtime) — only used at runtime, not for compilation
         * testCompileOnly — same as compileOnly except it’s for the tests
         * testImplementation — test equivalent of implementation
         * testRuntimeOnly — test equivalent of runtimeOnly
         * */

        /** TODO Convenient Develop */
        // 自动生成 getter setter，而不用写在代码里，需要 IDEA 安装 lombok 插件，并修改 "Settings > Build > Compiler > Annotation Processors" 为 Enable
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
        implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'         // 开发工具，实现 spring boot 项目热部署

        /** TODO Test */
        testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher'
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        testImplementation group: 'org.springframework', name: 'spring-mock', version: '2.0.8'
        

        /** TODO Config */ 
        // spring boot 默认只能注入 yml 里面的配置，引入这个可以注入 .xml 或 .properties 文件的配置，例如：@PropertySource("classpath:your.properties")
        implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'


        /** TODO Logging */
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
        testImplementation group: 'org.slf4j', name: 'slf4j-log4j12'


        /** TODO Web */
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'

        /** TODO Persistence */
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

        

        

        
    }


}














