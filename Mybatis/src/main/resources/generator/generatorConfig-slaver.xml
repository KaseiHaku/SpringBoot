<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!--
        使用方式：
            shell> java -jar mybatis-generator-core-x.x.x.jar -configfile generatorConfig.xml -overwrite
    -->

    <!-- 0~1 -->
    <!-- 主要用于引入外部文件的属性 -->
    <!--<properties />-->

    <!-- 0~n -->
    <!-- 引入到运行 shell> java -jar mybatis-generator-core-x.x.x.jar -configfile generatorConfig.xml 时 -classpath 参数中的目录，即 generator 所依赖的包 -->
    <classPathEntry location="/opt/Gradle/LocalRepository/caches/modules-2/files-2.1/mysql/mysql-connector-java/8.0.18/e088efaa4b568bc7d9f7274b9c5ea1a00da1a45c/mysql-connector-java-8.0.18.jar"/>


    <!-- 1~n -->
    <!-- targetRuntime: 表示生成的 Mybatis 代码的类型。MyBatis3DynamicSql = 生成 *DynamicSqlSupport.java; MyBatis3 = 生成 *Mapper.xml -->
    <!-- defaultModelType: 表示数据库 Table 外键关系和 Entity 的 extends 关系的对应方式 -->
    <context id="primaryDbGenerator" targetRuntime="MyBatis3" defaultModelType="conditional">
        <property name="javaFileEncoding" value="utf-8"/>
        <property name="targetJava8" value="true"/>

        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>



        <connectionFactory>
            <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
            <property name="connectionURL" value="jdbc:mysql://192.168.1.12:3306/kasei?characterEncoding=utf8&#38;allowMultiQueries=true&#38;serverTimezone=UTC"/>
            <property name="userId" value="kasei"/>
            <property name="password" value="kasei"/>
            <property name="arbitrary" value="other jdbc driver properties"/>
        </connectionFactory>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>


        <!-- 指定 *Entity.java 保存路径 -->
        <javaModelGenerator targetPackage="kasei.boot.mybatis.repository.slaver.entity"
                            targetProject="/opt/Git/LocalRepository/SpringBoot/Mybatis/src/main/java">
            <property name="constructorBased" value="true" />
            <!-- 根据数据库不同的 schema 生成不同的子包 -->
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
            <!-- 案例代码保存路径 -->
            <property name="exampleTargetProject" value="/opt/Git/LocalRepository/SpringBoot/Mybatis/src/main/java" />
            <property name="exampleTargetPackage" value="kasei.boot.mybatis.repository.slaver.dao.example" />
            <!-- 如果一个数据库表存在主键，那么将指定的类当做生成类的主键 -->
            <!--<property name="rootClass" value="" />-->
        </javaModelGenerator>

        <!-- 指定 *Mapper.xml 保存路径 -->
        <sqlMapGenerator targetPackage="kasei.boot.mybatis.repository.slaver.dao.sqlprovider"
                         targetProject="/opt/Git/LocalRepository/SpringBoot/Mybatis/src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 指定 *Mapper.java 和 *DynamicSqlSupport.java 保存路径 -->
        <javaClientGenerator targetPackage="kasei.boot.mybatis.repository.slaver.dao.mapper"
                             targetProject="/opt/Git/LocalRepository/SpringBoot/Mybatis/src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>


        <table tableName="person">
            <property name="useActualColumnNames" value="false"/>
        </table>
    </context>
</generatorConfiguration>
